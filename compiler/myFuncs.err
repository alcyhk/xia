func cleanScreen();
	assign(xs,0);
	assign(ys,0);
	assign(xe,479);
	assign(ye,799);
	assign(s,xs);
	assign(e,xe);
	mul(s,65536);
	add(s,ys);
	arith(e,16,34);
	add(e,ye);
	drawFill(0,s,e);
	assign(d,0);
	while(d < 50){
	add(d,1);
	}
end();
func opening();
	cleanScreen();
	assign(d,18);
	setc0(d);
	assign(f,2097152);
	assign(e,0);
	assign(d,0);
	assign(a,491494);
	assign(b,0);
	assign(c,32512);
	while(e < 15){
		while(d < 25){
			drb(a,b,c);
			add(a,1);
			add(d,1);
			add(b,32);
		}
		assign(d,0);
		sub(a,24);
		sub(b,800);
		add(b,f);
		add(e,1);
	}
	cleanScreen();
	openingKnock();
	cleanScreen();
end();
func openingKnock();
	assign(a,491594);
	assign(b,13631838);
	drb(a,b,c);
	assign(a,491597);
	add(b,1048576);
	drb(a,b,c);
	assign(a,491598);
	add(b,1048576);
	drb(a,b,c);
	assign(a,491586);
	add(b,1048576);
	drb(a,b,c);
	assign(a,491594);
	add(b,1048576);
	drb(a,b,c);
	assign(a,491582);
	add(b,1048576);
	drb(a,b,c);
	assign(d,0);
	while(d < 1000){
	add(d,1);
	}
end();
func drawMainScene();
	assign(drawFontCurr,font_k);
	assign(drawFontX,200);
	assign(drawFontY,28);
	drawFont();
	assign(drawFontCurr,font_n);
	assign(drawFontX,216);
	assign(drawFontY,28);
	drawFont();
	assign(drawFontCurr,font_o);
	assign(drawFontX,232);
	assign(drawFontY,28);
	drawFont();
	assign(drawFontCurr,font_c);
	assign(drawFontX,248);
	assign(drawFontY,28);
	drawFont();
	assign(drawFontCurr,font_k);
	assign(drawFontX,264);
	assign(drawFontY,28);
	drawFont();
	assign(origin, 1835064);
	drawAppEcho();
	add(origin, 5898240);
	drawAppGpio();
	add(origin, 5898240);
	drawAppAna();
	add(origin, 5898240);
	drawAppCalc();
	add(origin, 5898240);
	drawAppDraw();
end();
func drawAppDraw();
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_d);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_r);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_a);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_w);
	drb(a,b,c);
end();
func drawAppGpio();
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_g);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_p);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_i);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_o);
	drb(a,b,c);
end();
func drawAppAna();
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_a);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_n);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_a);
	drb(a,b,c);
end();
func drawAppCalc();
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_c);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_a);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_l);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_c);
	drb(a,b,c);
end();
func drawAppEcho();
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_e);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_c);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_h);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_o);
	drb(a,b,c);
end();
func drawIconBack();
	assign(origin, 1835064);
	assign(shape,462848);
	assign(h_line,462848);
	assign(v_line,462849);
	assign(cornerUL,462851);
	assign(cornerUR,462852);
	assign(cornerDL,462853);
	assign(cornerDR,462854);
	assign(x_step,1048576);
	assign(slash_lr,462861);
	assign(slash_rl,462862);
	assign(b,origin);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	assign(a,slash_rl);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	add(b,x_step);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,x_step);
	assign(a,slash_lr);
	drb(a,b,c);
	add(b,x_step);
	assign(a,slash_rl);
	drb(a,b,c);
	assign(b,origin);
	add(b,16);
	add(b,16);
	add(b,16);
	add(b,16);
	assign(a,font_b);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_a);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_c);
	drb(a,b,c);
	add(b,x_step);
	assign(a,font_k);
	drb(a,b,c);
end();
func drawline();
	setc0(z);
end();
func drawFont();
	mul(drawFontX,65536); 
	add(drawFontX,drawFontY);
	drb(drawFontCurr,drawFontX,c);
	sub(drawFontX,drawFontY);
	div(drawFontX,65536); 
end();
func runMainScene();
	assign(tchB,128);
	assign(state,0);
	while(1==1){
		chkNoTouch(tchA);
		if(tchA>tchB){
			getTouch(x,y);
			if(x != 0 && y != 0){
				if(state == 0 && acted == 0){
					pressEchoApp(); 
					pressGpioApp();
					pressAnaApp();
					pressCalcApp();
					pressAppDraw();
					assign(acted,1);
				}
				runEchoApp();
				runGpioApp();
				runAnaApp();
				runCalcApp();
				runAppDraw();
			}
		}else if(tchA==tchB){
			assign(d,0);
			while(d<25){
				getTouch(x,y);
				add(d,1);
			}
			assign(x,479);
			assign(y,799);
			assign(acted,0);
		}
		if(state == 1){	
			chkc(state1GetChar,0);
			if(state1GetChar == 0){
				getc(state1GetChar,0);
				setc(state1GetChar,0);
				setc(state1GetChar,1);
				setc(state1GetChar,2);
				setc(state1GetChar,3);
				spiSet(state1GetChar,0);
				spiGet(state1GetChar,0);
				setc(state1GetChar,0);
				spiSet(state1GetChar,0);
				twiSet(78,4);
				twiSet(85,0);
				twiSet(85,2);
			}		
		}
		if(state == 2){
			gpioGet(gpio);
			gpioSet(gpio);
		}
	}
end();
func pressEchoApp();
	if(x > 26 && x < 94 && y > 42 && y < 110){
		cleanScreen();
		drawIconBack();
		assign(drawFontCurr,font_e);
		assign(drawFontX,208);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_c);
		assign(drawFontX,224);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_h);
		assign(drawFontX,240);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_o);
		assign(drawFontX,256);
		assign(drawFontY,28);
		drawFont();
		assign(state,1);
		assign(d,0);
		while(d<25){
			chkNoTouch(tchA);
			if(tchA==tchB){
					getTouch(x,y);
			}
			add(d,1);
		}
	} 
end();
func pressGpioApp();
	if(x > 118 && x < 182 && y > 42 && y < 110){
		cleanScreen();
		assign(drawFontCurr,font_g);
		assign(drawFontX,208);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_p);
		assign(drawFontX,224);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_i);
		assign(drawFontX,240);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_o);
		assign(drawFontX,256);
		assign(drawFontY,28);
		drawFont();
		drawIconBack();
		assign(state,2);
		assign(d,0);
		while(d<25){
			chkNoTouch(tchA);
			if(tchA==tchB){
					getTouch(x,y);
			}
			add(d,1);
		}
	}
end();
func pressAnaApp();
	if(x > 208 && x < 272 && y > 42 && y < 110){
		cleanScreen();
		assign(drawFontCurr,font_a);
		assign(drawFontX,208);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_n);
		assign(drawFontX,224);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_a);
		assign(drawFontX,240);
		assign(drawFontY,28);
		drawFont();
		drawIconBack();
		assign(state,3);
		assign(d,0);
		while(d<25){
			chkNoTouch(tchA);
			if(tchA==tchB){
					getTouch(x,y);
			}
			add(d,1);
		}
	}
end();
func pressCalcApp();
	if(x > 298 && x < 362 && y > 42 && y < 110){
		cleanScreen();
		assign(drawFontCurr,font_c);
		assign(drawFontX,208);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_a);
		assign(drawFontX,224);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_l);
		assign(drawFontX,240);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_c);
		assign(drawFontX,256);
		assign(drawFontY,28);
		drawFont();
		drawIconBack();
		assign(drawFontCurr,font_minus);
		assign(drawFontX,480);
		assign(drawFontY,152);
		assign(d,0);
		assign(e,0);
		while(e < 7){
			while(d<15){
				sub(drawFontX,32);
				drawFont();
				add(d,1);
			}
			assign(d,0);
			add(e,1);
			assign(drawFontX,480);						
			add(drawFontY,100);
		}
		assign(drawFontCurr,font_vBar);
		assign(d,0);
		assign(e,0);
		assign(drawFontX,0);
		assign(drawFontY,752);
		while(e < 5){
			while(d<15){
				sub(drawFontY,32);
				drawFont();
				add(d,1);
			}
			assign(d,0);
			add(e,1);
			assign(drawFontY,752);						
			add(drawFontX,96);
		}
		assign(drawFontCurr,font_c);
		assign(drawFontX,0);
		assign(drawFontY,252);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		assign(drawFontCurr,font_slash);
		assign(drawFontX,0);
		add(drawFontX,96);
		add(drawFontX,96);
		add(drawFontX,96);
		assign(drawFontY,252);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		assign(drawFontCurr,font_7);
		assign(drawFontX,0);
		assign(drawFontY,352);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		assign(drawFontCurr,font_8);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_9);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_asterisk);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_4);
		assign(drawFontX,0);
		assign(drawFontY,452);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		assign(drawFontCurr,font_5);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_6);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_minus);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_1);
		assign(drawFontX,0);
		assign(drawFontY,452);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		assign(drawFontCurr,font_2);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_3);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_plus);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_0);
		assign(drawFontX,0);
		assign(drawFontY,552);
		add(drawFontX,48);
		add(drawFontY,48);
		drawFont();
		add(drawFontX,96);
		assign(drawFontCurr,font_dot);
		add(drawFontX,96);
		drawFont();
		assign(drawFontCurr,font_equal);
		add(drawFontX,96);
		drawFont();
		assign(state,4);
		assign(d,0);
		while(d<25){
			chkNoTouch(tchA);
			if(tchA==tchB){
					getTouch(x,y);
			}
			add(d,1);
		}
	}
end();
func pressAppDraw();
	if(x > 388 && x < 452 && y > 42 && y < 110){
		cleanScreen();
		assign(drawFontCurr,font_d);
		assign(drawFontX,208);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_r);
		assign(drawFontX,224);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_a);
		assign(drawFontX,240);
		assign(drawFontY,28);
		drawFont();
		assign(drawFontCurr,font_w);
		assign(drawFontX,256);
		assign(drawFontY,28);
		drawFont();
		drawIconBack();
		assign(state,5);
		assign(d,0);
		while(d<50){
			chkNoTouch(tchA);
			if(tchA==tchB){
					getTouch(x,y);
			}
			add(d,1);
		}
	}
end();
func runEchoApp();
	if(state == 1 && acted == 0){
		if(x > 26 && x < 94 && y > 42 && y < 110){
			cleanScreen();
			assign(drawFontCurr,font_k);
			assign(drawFontX,200);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_n);
			assign(drawFontX,216);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_o);
			assign(drawFontX,232);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_c);
			assign(drawFontX,248);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_k);
			assign(drawFontX,264);
			assign(drawFontY,28);
			drawFont();
			assign(origin, 1835064);
			drawAppEcho();
			add(origin, 5898240);
			drawAppGpio();
			add(origin, 5898240);
			drawAppAna();
			add(origin, 5898240);
			drawAppCalc();
			add(origin, 5898240);
			drawAppDraw();
			assign(state,0);
			assign(d,0);
			while(d<25){
				chkNoTouch(tchA);
				if(tchA==tchB){
						getTouch(x,y);
				}
				add(d,1);
			}
			assign(acted,1);			
		}
	}
end();
func runGpioApp();
	if(state == 2 && acted == 0){
		if(x > 26 && x < 94 && y > 42 && y < 110){
			cleanScreen();
			assign(drawFontCurr,font_k);
			assign(drawFontX,200);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_n);
			assign(drawFontX,216);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_o);
			assign(drawFontX,232);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_c);
			assign(drawFontX,248);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_k);
			assign(drawFontX,264);
			assign(drawFontY,28);
			drawFont();
			assign(origin, 1835064);
			drawAppEcho();
			add(origin, 5898240);
			drawAppGpio();
			add(origin, 5898240);
			drawAppAna();
			add(origin, 5898240);
			drawAppCalc();
			add(origin, 5898240);
			drawAppDraw();
			assign(state,0);
			assign(d,0);
			while(d<25){
				chkNoTouch(tchA);
				if(tchA==tchB){
						getTouch(x,y);
				}
				add(d,1);
			}
			assign(acted,1);		
		}
	}
end();
func runAnaApp();
	if(state == 3 && acted == 0){
		if(x > 26 && x < 94 && y > 42 && y < 110){
			cleanScreen();
			assign(drawFontCurr,font_k);
			assign(drawFontX,200);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_n);
			assign(drawFontX,216);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_o);
			assign(drawFontX,232);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_c);
			assign(drawFontX,248);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_k);
			assign(drawFontX,264);
			assign(drawFontY,28);
			drawFont();
			assign(origin, 1835064);
			drawAppEcho();
			add(origin, 5898240);
			drawAppGpio();
			add(origin, 5898240);
			drawAppAna();
			add(origin, 5898240);
			drawAppCalc();
			add(origin, 5898240);
			drawAppDraw();
			assign(state,0);
			assign(d,0);
			while(d<25){
				chkNoTouch(tchA);
				if(tchA==tchB){
						getTouch(x,y);
				}
				add(d,1);
			}
			assign(acted,1);
		}
	}
end();
func runCalcApp();
	if(state == 4 && acted == 0){
		if(x > 26 && x < 94 && y > 42 && y < 110){
			cleanScreen();
			assign(drawFontCurr,font_k);
			assign(drawFontX,200);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_n);
			assign(drawFontX,216);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_o);
			assign(drawFontX,232);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_c);
			assign(drawFontX,248);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_k);
			assign(drawFontX,264);
			assign(drawFontY,28);
			drawFont();
			assign(origin, 1835064);
			drawAppEcho();
			add(origin, 5898240);
			drawAppGpio();
			add(origin, 5898240);
			drawAppAna();
			add(origin, 5898240);
			drawAppCalc();
			add(origin, 5898240);
			drawAppDraw();
			assign(state,0);
			assign(d,0);
			while(d<25){
				chkNoTouch(tchA);
				if(tchA==tchB){
						getTouch(x,y);
				}
				add(d,1);
			}	
			assign(acted,1);
		}
	}		
end();
func runAppDraw();
	if(state == 5 && acted == 0){
		assign(mix,x);
		mul(mix,65536);
		add(mix,y);
		assign(a,491520);
		drb(a,mix,c);
		if(x > 26 && x < 94 && y > 42 && y < 110){
			cleanScreen();
			assign(drawFontCurr,font_k);
			assign(drawFontX,200);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_n);
			assign(drawFontX,216);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_o);
			assign(drawFontX,232);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_c);
			assign(drawFontX,248);
			assign(drawFontY,28);
			drawFont();
			assign(drawFontCurr,font_k);
			assign(drawFontX,264);
			assign(drawFontY,28);
			drawFont();
			assign(origin, 1835064);
			drawAppEcho();
			add(origin, 5898240);
			drawAppGpio();
			add(origin, 5898240);
			drawAppAna();
			add(origin, 5898240);
			drawAppCalc();
			add(origin, 5898240);
			drawAppDraw();
			assign(state,0);
			assign(d,0);
			while(d<25){
				chkNoTouch(tchA);
				if(tchA==tchB){
						getTouch(x,y);
				}
				add(d,1);
			}
			assign(acted,1);	
		}
	}
end();
